//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18033
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zero.Web.Manage.Service.Img {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.Img.FileUploadServiceSoap")]
    public interface FileUploadServiceSoap {
        
        // CODEGEN: 消息 UploadRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zero.Web.Manage.Service.Img.UploadResponse Upload(Zero.Web.Manage.Service.Img.UploadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Upload", ReplyAction="*")]
        System.Threading.Tasks.Task<Zero.Web.Manage.Service.Img.UploadResponse> UploadAsync(Zero.Web.Manage.Service.Img.UploadRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CredentialSoapHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userNameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Upload", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public Zero.Web.Manage.Service.Img.CredentialSoapHeader CredentialSoapHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] image;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string path;
        
        public UploadRequest() {
        }
        
        public UploadRequest(Zero.Web.Manage.Service.Img.CredentialSoapHeader CredentialSoapHeader, byte[] image, string path) {
            this.CredentialSoapHeader = CredentialSoapHeader;
            this.image = image;
            this.path = path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadResult;
        
        public UploadResponse() {
        }
        
        public UploadResponse(string UploadResult) {
            this.UploadResult = UploadResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FileUploadServiceSoapChannel : Zero.Web.Manage.Service.Img.FileUploadServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileUploadServiceSoapClient : System.ServiceModel.ClientBase<Zero.Web.Manage.Service.Img.FileUploadServiceSoap>, Zero.Web.Manage.Service.Img.FileUploadServiceSoap {
        
        public FileUploadServiceSoapClient() {
        }
        
        public FileUploadServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileUploadServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileUploadServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileUploadServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zero.Web.Manage.Service.Img.UploadResponse Zero.Web.Manage.Service.Img.FileUploadServiceSoap.Upload(Zero.Web.Manage.Service.Img.UploadRequest request) {
            return base.Channel.Upload(request);
        }
        
        public string Upload(Zero.Web.Manage.Service.Img.CredentialSoapHeader CredentialSoapHeader, byte[] image, string path) {
            Zero.Web.Manage.Service.Img.UploadRequest inValue = new Zero.Web.Manage.Service.Img.UploadRequest();
            inValue.CredentialSoapHeader = CredentialSoapHeader;
            inValue.image = image;
            inValue.path = path;
            Zero.Web.Manage.Service.Img.UploadResponse retVal = ((Zero.Web.Manage.Service.Img.FileUploadServiceSoap)(this)).Upload(inValue);
            return retVal.UploadResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zero.Web.Manage.Service.Img.UploadResponse> Zero.Web.Manage.Service.Img.FileUploadServiceSoap.UploadAsync(Zero.Web.Manage.Service.Img.UploadRequest request) {
            return base.Channel.UploadAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zero.Web.Manage.Service.Img.UploadResponse> UploadAsync(Zero.Web.Manage.Service.Img.CredentialSoapHeader CredentialSoapHeader, byte[] image, string path) {
            Zero.Web.Manage.Service.Img.UploadRequest inValue = new Zero.Web.Manage.Service.Img.UploadRequest();
            inValue.CredentialSoapHeader = CredentialSoapHeader;
            inValue.image = image;
            inValue.path = path;
            return ((Zero.Web.Manage.Service.Img.FileUploadServiceSoap)(this)).UploadAsync(inValue);
        }
    }
}
