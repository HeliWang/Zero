using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Security.Cryptography;
using System.Text;

namespace Zero.Test
{
    public partial class TaoXieOpenTest : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            string username = "测试1";
            string password = "4db6c230adabfa818c18429d120d9954";

            //var uri = string.Format("http://open.taoxie.com/V1.0/Cate/GetCates.xhtml?format=xml&key={0}", username);
            //var uri = string.Format("http://open.taoxie.com/V1.0/Brand/GetBrands.xhtml?format=xml&key={0}", username);
            //var uri = string.Format("http://open.taoxie.com/V1.0/Product/GetProducts.xhtml?brands={0}&cate_id=0&on_sale=1&page_index=1&page_size=20&q=&format=xml&key={1}", "42,19", username);
            var uri = string.Format("http://open.taoxie.com/V1.0/Product/GetProductById.xhtml?id={0}&display=1&format=xml&key={1}", 12722, username);
            
            var uriHashed = CryptographyHelper.Encode(password, uri);
            uri = string.Format("{0}&hash={1}", uri, uriHashed);
            Response.Write(uri);
        }

        public class CryptographyHelper
        {
            public static string Encode(string key, string value)
            {
                var encoding = new ASCIIEncoding();
                var hmacsha1 = new HMACSHA1(encoding.GetBytes(key));
                var hashValue = hmacsha1.ComputeHash(encoding.GetBytes(value));

                return CryptographyHelper.ByteToString(hashValue);
            }

            public static string ByteToString(byte[] buff)
            {
                var sbinary = string.Empty;

                for (var i = 0; i < buff.Length; i++)
                {
                    sbinary += buff[i].ToString("X2"); // hex format
                }

                return (sbinary);
            }
        }
    }
}